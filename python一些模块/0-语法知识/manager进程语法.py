#manager这里可以共享列表，字典等很多数据类型
from multiprocessing import Process, Manager
import os


def f(d,l):
    """
    传递一个d字典
    一个列表
    """
    #getppid 就可以拿到父进程的ID
    #getpid  拿自己进程
    d[os.getpid()]=os.getpid()
    l.append(os.getpid())
    print(l)

if __name__ == "__main__":

    # d={}
    # l=[]
    # p_list=[]
    # for i in range(10):
    #     p = Process(target=f,args=(d,l))
    #     p.start()
    #     p_list.append(p)

    # for res in p_list:
    #     res.join()
    # print(d)
    # print(l)
    """
    最终结果还是｛｝[]
    [31320]
    [31228]
    [30148]
    [31128]
    [21104]
    [3888]
    [31304]
    [4504]
    [31724]
    [17600]
    {}
    []
    """
    '''
    加上了maager管理以后
    '''
    with Manager() as manager:
        d = manager.dict()
        l = manager.list(range(5))
        p_list=[]

        for i in range(10):
            p = Process(target=f,args=(d,l))
            p.start()
            p_list.append(p)


        for res in p_list:
            res.join()
        print(d)
        print(l)

"""
[0, 1, 2, 3, 4, 1748]
[0, 1, 2, 3, 4, 1748, 30932]
[0, 1, 2, 3, 4, 1748, 30932, 24768]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732, 260]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732, 260, 4196]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732, 260, 4196, 21268]
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732, 260, 4196, 21268, 31476]
{1748: 1748, 30932: 30932, 24768: 24768, 10756: 10756, 22180: 22180, 18732: 18732, 260: 260, 4196: 4196, 21268: 21268, 31476: 31476}
[0, 1, 2, 3, 4, 1748, 30932, 24768, 10756, 22180, 18732, 260, 4196, 21268, 31476]
"""